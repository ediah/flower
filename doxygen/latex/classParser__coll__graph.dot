digraph "Parser"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Parser",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StTable" ];
  Node2 [label="StructTable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStructTable.html",tooltip=" "];
  Node2 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" next" ];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" fields" ];
  Node3 [label="IdentTable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classIdentTable.html",tooltip=" "];
  Node3 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" next\nmainTable" ];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" c" ];
  Node4 [label="Cursor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCursor.html",tooltip=" "];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" exits\nsteps" ];
  Node5 [label="Stack",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStack.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" memControl" ];
  Node6 [label="Gendarme",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classGendarme.html",tooltip="Класс, предназначенный для освобождения неиспользуемой памяти."];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" code" ];
  Node7 [label="std::ifstream",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="std::basic_ifstream\l\< char \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="std::basic_istream\l\< Char \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="std::basic_ios\< Char \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="std::ios_base",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" fileQueue" ];
  Node12 [label="std::vector\< std::ifstream * \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ];
  Node13 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" retTypes" ];
  Node13 [label="std::vector\< std::pair\l\< type_t, char * \> \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" poliz" ];
  Node14 [label="POLIZ",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classPOLIZ.html",tooltip=" "];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IdTable\nthreads" ];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" bin" ];
  Node15 [label="std::ofstream",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="std::basic_ofstream\l\< char \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="std::basic_ostream\l\< Char \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node10 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid"];
}
